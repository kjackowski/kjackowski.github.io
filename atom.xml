<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My MOOC Noteblog]]></title>
  <link href="http://kjackowski.github.io/atom.xml" rel="self"/>
  <link href="http://kjackowski.github.io/"/>
  <updated>2015-01-11T14:58:51+01:00</updated>
  <id>http://kjackowski.github.io/</id>
  <author>
    <name><![CDATA[Knut Jackowski]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning Python: Free Resources]]></title>
    <link href="http://kjackowski.github.io/blog/2015/01/11/learning-python/"/>
    <updated>2015-01-11T14:51:15+01:00</updated>
    <id>http://kjackowski.github.io/blog/2015/01/11/learning-python</id>
    <content type="html"><![CDATA[<p>This is a list of free online books and other resources for anybody interested in learning the Python programming language. There are other lists out there, this one contains only items, that I have personally tried and found useful.</p>

<ul>
<li><a href="http://www.codecademy.com/">Codecademy</a>: A website with interactive tutorials.</li>
<li><a href="http://www.pythonlearn.com/">PythonLearn</a>: A website and a book with videos and autograded exercises. It is the material used for the Coursera-course <a href="https://www.coursera.org/course/pythonlearn">Programming for Everybody</a> by Charles Severance.</li>
<li><a href="https://www.udacity.com/course/cs101">Udacity: Intro to Computer Science &amp; Programming CS 101</a>: A complete introduction to Computer Science with Python.</li>
<li><a href="http://www.greenteapress.com/thinkpython/">Think Python: How to Think Like a Computer Scientist</a>: A book that is also an introduction to Computer Science as well as an introduction to Python. If you have succeded in learning Python (at least to a reasonable degree), the author might still be of interest to you, there are some more advanced books on his website.</li>
<li><a href="http://learnpythonthehardway.org/book/">Learn Python The Hard Way</a>: A very good book about Python and Programming in general. Not really hard.</li>
<li>Last but not least: <a href="https://docs.python.org/2/tutorial/index.html">The Python Tutorial</a> - The official tutorial by Python.org.</li>
</ul>


<p>Have fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up the Tools for CS 50]]></title>
    <link href="http://kjackowski.github.io/blog/2015/01/05/setting-up-the-tools-for-cs-50/"/>
    <updated>2015-01-05T13:45:11+01:00</updated>
    <id>http://kjackowski.github.io/blog/2015/01/05/setting-up-the-tools-for-cs-50</id>
    <content type="html"><![CDATA[<p>So CS 50 has officially begun. Time to get my computer ready for the work.</p>

<p>The installation and use of the appliance is covered in great detail on the coursepages, so there is no need to describe it here. What I do different is that I plan to work mostly outside of the appliance, because my computer is barely able to run it and it is a pain in the backside to use it for longer periods (It&rsquo;s an old laptop, that wasn&rsquo;t powerful even when it was new.).</p>

<!-- more -->


<p>Since I am using Linux on my computer as the main operating system, setting it up for coding is not so big a task. Most of the packages are allready installed by me (the most important would be &ldquo;build-essential&rdquo;, a metapackage, that brings compilers and stuff). Getting the functions from CS 50 to work is another thing.</p>

<p>First I followed the instructions on the <a href="https://manual.cs50.net/library/">manual</a> for the CS 50 libraries. It was a lot of copy/pasting, but in the end the libraries in all four languages worked fine.</p>

<p>After that, I began to search for instructions for the other tools of the appliance, most important the check50 script. A nice <a href="https://medium.com/@ddiipp/take-harvards-cs50-without-cs50-appliance-8372acb91314">blogpost on medium</a> showed me where to look, but sadly the mentioned git-repository was deleted since then. I found a <a href="https://github.com/jthurner/check50">copy of it on github</a> and tried to install it. Worked fine. But the most interesting part of it was the question: will it work with the current course?</p>

<p>For convenience I quickly made alias for it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">check50</span><span class="o">=</span><span class="s2">&quot;node /&quot;</span>path to my cs <span class="m">50</span> folder<span class="s2">&quot;/cs50/check50/SOURCES/opt/check50/bin/check50.js&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>After that, I tried the <a href="http://cdn.cs50.net/2015/x/psets/1/pset1/pset1.html#hello_c">example code from the coursesite</a>:</p>

<figure class='code'><figcaption><span>[Hello World - The first try] (hello-0.1.c)</span> <a href='http://kjackowski.github.io/downloads/code/hello-0.1.c'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hello, world</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This compiled without visible errors, but when I made the compiling a little more verbose, I got this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ CFLAGS</span><span class="o">=</span><span class="s2">&quot;-Wall&quot;</span> make hello
</span><span class='line'>cc -Wall    hello.c   -o hello
</span><span class='line'>hello.c: In <span class="k">function</span> ‘main’:
</span><span class='line'>hello.c:6:1: warning: control reaches end of non-void <span class="k">function</span> <span class="o">[</span>-Wreturn-type<span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>^
</span></code></pre></td></tr></table></div></figure>


<p>One line more and the more verbose compiling also went on without errors:</p>

<figure class='code'><figcaption><span>[Hello World - Without Warnings] (hello.c)</span> <a href='http://kjackowski.github.io/downloads/code/hello.c'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hello, world</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Time to use the code to test the check50 function with the new course:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>check50 2014.fall.pset1.hello hello.c
</span><span class='line'>:<span class="o">)</span> hello.c exists
</span><span class='line'>:<span class="o">)</span> hello.c compiles
</span><span class='line'>:<span class="o">)</span> prints <span class="s2">&quot;hello, world\n&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That went well. It seems like I am ready to dive into the coding problems and need only use the appliance for submitting the solutions. On the side, I have become somewhat comfortable with the functions, that <a href="http://octopress.org">Octopress</a> provides for embedding code into blogposts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Blog, Nothing Less, Nothing More]]></title>
    <link href="http://kjackowski.github.io/blog/2014/12/31/hello-world/"/>
    <updated>2014-12-31T17:54:44+01:00</updated>
    <id>http://kjackowski.github.io/blog/2014/12/31/hello-world</id>
    <content type="html"><![CDATA[<p>This is also the README for the <a href="https://github.com/kjackowski/kjackowski.github.io">source code of my blog</a>.</p>

<h2>Intention</h2>

<p>I created this personal blog to document my learning experiences in online courses. I have already taken some courses, but often strayed awy after some time. This is something I want to change in the new year 2015. Therefore: A Blog. Here I want to write about what I learned and what I struggle with. Since I will learn something about code, I will probably also post some things related to coding in general, not only about the courses, that I take part in.</p>

<h2>Technicalities</h2>

<p>This blog is, as one can see on the <a href="https://kjackowski.github.io/">site</a> and in the <a href="https://github.com/kjackowski/kjackowski.github.io">source code</a>, is built with <a href="http://octopress.org/">Octopress</a>, a blogging software, that builds blogs with static html-files and can be easily configured to deploy on github.</p>
]]></content>
  </entry>
  
</feed>
